/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/render/api';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from './ui-loader-circular.component';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/metadata/view';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '@angular/core/src/security';
var renderType_UILoaderCircularComponent_Host:import0.RenderComponentType = (null as any);
class _View_UILoaderCircularComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _UILoaderCircularComponent_0_4:import3.UILoaderCircularComponent;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_UILoaderCircularComponent_Host0,renderType_UILoaderCircularComponent_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.selectOrCreateHostElement('ui-loader-circular',rootSelector,(null as any));
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_UILoaderCircularComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._UILoaderCircularComponent_0_4 = new import3.UILoaderCircularComponent();
    this._appEl_0.initComponent(this._UILoaderCircularComponent_0_4,[],compView_0);
    compView_0.create(this._UILoaderCircularComponent_0_4,this.projectableNodes,(null as any));
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.UILoaderCircularComponent) && (0 === requestNodeIndex))) { return this._UILoaderCircularComponent_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (((this.numberOfChecks === 0) && !throwOnChange)) { this._UILoaderCircularComponent_0_4.ngOnInit(); }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_UILoaderCircularComponent_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  if ((renderType_UILoaderCircularComponent_Host === (null as any))) { (renderType_UILoaderCircularComponent_Host = viewUtils.createRenderComponentType('',0,import8.ViewEncapsulation.None,[],{})); }
  return new _View_UILoaderCircularComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const UILoaderCircularComponentNgFactory:import9.ComponentFactory<import3.UILoaderCircularComponent> = new import9.ComponentFactory<import3.UILoaderCircularComponent>('ui-loader-circular',viewFactory_UILoaderCircularComponent_Host0,import3.UILoaderCircularComponent);
const styles_UILoaderCircularComponent:any[] = ['body[_ngcontent-%COMP%] {\n		  background-color: #eee;\n		}\n\n		.ui-showbox[_ngcontent-%COMP%] {\n		  top: 0;\n		  bottom: 0;\n		  left: 0;\n		  right: 0;\n		}\n\n		.ui-loader[_ngcontent-%COMP%] {\n		  position: relative;\n		  margin: 0px auto;\n		  width: 100px;\n		}\n\n		.ui-loader[_ngcontent-%COMP%]:before {\n		  content: \'\';\n		  display: block;\n		  padding-top: 100%;\n		}\n\n		.circular[_ngcontent-%COMP%] {\n		  -webkit-animation: rotate 2s linear infinite;\n		          animation: rotate 2s linear infinite;\n		  height: 100%;\n		  -webkit-transform-origin: center center;\n		          transform-origin: center center;\n		  width: 100%;\n		  position: absolute;\n		  top: 0;\n		  bottom: 0;\n		  left: 0;\n		  right: 0;\n		  margin: auto;\n		}\n\n		.path[_ngcontent-%COMP%] {\n		  stroke-dasharray: 1, 200;\n		  stroke-dashoffset: 0;\n		  -webkit-animation: dash 1.5s ease-in-out infinite, color 6s ease-in-out infinite;\n		          animation: dash 1.5s ease-in-out infinite, color 6s ease-in-out infinite;\n		  stroke-linecap: round;\n		}\n\n		@-webkit-keyframes rotate {\n		  100% {\n		    -webkit-transform: rotate(360deg);\n		            transform: rotate(360deg);\n		  }\n		}\n\n		@keyframes rotate {\n		  100% {\n		    -webkit-transform: rotate(360deg);\n		            transform: rotate(360deg);\n		  }\n		}\n		@-webkit-keyframes dash {\n		  0% {\n		    stroke-dasharray: 1, 200;\n		    stroke-dashoffset: 0;\n		  }\n		  50% {\n		    stroke-dasharray: 89, 200;\n		    stroke-dashoffset: -35px;\n		  }\n		  100% {\n		    stroke-dasharray: 89, 200;\n		    stroke-dashoffset: -124px;\n		  }\n		}\n		@keyframes dash {\n		  0% {\n		    stroke-dasharray: 1, 200;\n		    stroke-dashoffset: 0;\n		  }\n		  50% {\n		    stroke-dasharray: 89, 200;\n		    stroke-dashoffset: -35px;\n		  }\n		  100% {\n		    stroke-dasharray: 89, 200;\n		    stroke-dashoffset: -124px;\n		  }\n		}'];
var renderType_UILoaderCircularComponent:import0.RenderComponentType = (null as any);
class _View_UILoaderCircularComponent0 extends import1.AppView<import3.UILoaderCircularComponent> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _el_3:any;
  _text_4:any;
  _el_5:any;
  _text_6:any;
  _el_7:any;
  _text_8:any;
  _text_9:any;
  _text_10:any;
  _text_11:any;
  /*private*/ _expr_0:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_UILoaderCircularComponent0,renderType_UILoaderCircularComponent,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n	',(null as any));
    this._el_1 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this.renderer.setElementAttribute(this._el_1,'class','ui-showbox');
    this._text_2 = this.renderer.createText(this._el_1,'\n  		',(null as any));
    this._el_3 = this.renderer.createElement(this._el_1,'div',(null as any));
    this.renderer.setElementAttribute(this._el_3,'class','ui-loader');
    this._text_4 = this.renderer.createText(this._el_3,'\n			',(null as any));
    this._el_5 = this.renderer.createElement(this._el_3,':svg:svg',(null as any));
    this.renderer.setElementAttribute(this._el_5,'class','circular');
    this.renderer.setElementAttribute(this._el_5,'viewBox','25 25 50 50');
    this._text_6 = this.renderer.createText(this._el_5,'\n      			',(null as any));
    this._el_7 = this.renderer.createElement(this._el_5,':svg:circle',(null as any));
    this.renderer.setElementAttribute(this._el_7,'class','path');
    this.renderer.setElementAttribute(this._el_7,'cx','50');
    this.renderer.setElementAttribute(this._el_7,'cy','50');
    this.renderer.setElementAttribute(this._el_7,'fill','none');
    this.renderer.setElementAttribute(this._el_7,'r','20');
    this.renderer.setElementAttribute(this._el_7,'stroke-miterlimit','10');
    this.renderer.setElementAttribute(this._el_7,'stroke-width','2');
    this._text_8 = this.renderer.createText(this._el_5,'\n    		',(null as any));
    this._text_9 = this.renderer.createText(this._el_3,'\n    	',(null as any));
    this._text_10 = this.renderer.createText(this._el_1,'\n    ',(null as any));
    this._text_11 = this.renderer.createText(parentRenderNode,'\n  \n	',(null as any));
    this._expr_0 = import7.UNINITIALIZED;
    this.init([],[
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._text_9,
      this._text_10,
      this._text_11
    ]
    ,[],[]);
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_0:any = this.context.color;
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this.renderer.setElementStyle(this._el_7,'stroke',((this.viewUtils.sanitizer.sanitize(import10.SecurityContext.STYLE,currVal_0) == (null as any))? (null as any): this.viewUtils.sanitizer.sanitize(import10.SecurityContext.STYLE,currVal_0).toString()));
      this._expr_0 = currVal_0;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
}
export function viewFactory_UILoaderCircularComponent0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<import3.UILoaderCircularComponent> {
  if ((renderType_UILoaderCircularComponent === (null as any))) { (renderType_UILoaderCircularComponent = viewUtils.createRenderComponentType('D:/Code/angular2-ui/src/components/ui-loader-circular/ui-loader-circular.component.ts class UILoaderCircularComponent - inline template',0,import8.ViewEncapsulation.Emulated,styles_UILoaderCircularComponent,{})); }
  return new _View_UILoaderCircularComponent0(viewUtils,parentInjector,declarationEl);
}