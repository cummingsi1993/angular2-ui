/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/render/api';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from './ui-input.component';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/linker/element_ref';
import * as import9 from '@angular/forms/src/directives/control_value_accessor';
import * as import10 from '@angular/core/src/metadata/view';
import * as import11 from '@angular/core/src/linker/component_factory';
import * as import12 from '@angular/common/src/directives/ng_if';
import * as import13 from '@angular/forms/src/directives/default_value_accessor';
import * as import14 from '@angular/forms/src/directives/ng_model';
import * as import15 from '@angular/forms/src/directives/ng_control_status';
import * as import16 from '@angular/core/src/linker/template_ref';
import * as import17 from '@angular/forms/src/directives/ng_control';
var renderType_UIInputComponent_Host:import0.RenderComponentType = (null as any);
class _View_UIInputComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _UIInputComponent_0_4:import3.UIInputComponent;
  __NG_VALUE_ACCESSOR_0_5:any[];
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_UIInputComponent_Host0,renderType_UIInputComponent_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  get _NG_VALUE_ACCESSOR_0_5():any[] {
    if ((this.__NG_VALUE_ACCESSOR_0_5 == (null as any))) { (this.__NG_VALUE_ACCESSOR_0_5 = [this._UIInputComponent_0_4]); }
    return this.__NG_VALUE_ACCESSOR_0_5;
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.selectOrCreateHostElement('ui-input',rootSelector,(null as any));
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_UIInputComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._UIInputComponent_0_4 = new import3.UIInputComponent(new import8.ElementRef(this._el_0));
    this._appEl_0.initComponent(this._UIInputComponent_0_4,[],compView_0);
    compView_0.create(this._UIInputComponent_0_4,this.projectableNodes,(null as any));
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.UIInputComponent) && (0 === requestNodeIndex))) { return this._UIInputComponent_0_4; }
    if (((token === import9.NG_VALUE_ACCESSOR) && (0 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_0_5; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (((this.numberOfChecks === 0) && !throwOnChange)) { this._UIInputComponent_0_4.ngOnInit(); }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_UIInputComponent_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  if ((renderType_UIInputComponent_Host === (null as any))) { (renderType_UIInputComponent_Host = viewUtils.createRenderComponentType('',0,import10.ViewEncapsulation.None,[],{})); }
  return new _View_UIInputComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const UIInputComponentNgFactory:import11.ComponentFactory<import3.UIInputComponent> = new import11.ComponentFactory<import3.UIInputComponent>('ui-input',viewFactory_UIInputComponent_Host0,import3.UIInputComponent);
const styles_UIInputComponent:any[] = [];
var renderType_UIInputComponent:import0.RenderComponentType = (null as any);
class _View_UIInputComponent0 extends import1.AppView<import3.UIInputComponent> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _anchor_3:any;
  /*private*/ _appEl_3:import2.AppElement;
  _TemplateRef_3_5:any;
  _NgIf_3_6:import12.NgIf;
  _text_4:any;
  _el_5:any;
  _DefaultValueAccessor_5_3:import13.DefaultValueAccessor;
  _NG_VALUE_ACCESSOR_5_4:any[];
  _NgModel_5_5:import14.NgModel;
  _NgControl_5_6:any;
  _NgControlStatus_5_7:import15.NgControlStatus;
  _text_6:any;
  _text_7:any;
  /*private*/ _expr_0:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  /*private*/ _expr_9:any;
  /*private*/ _expr_10:any;
  /*private*/ _expr_11:any;
  /*private*/ _expr_12:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_UIInputComponent0,renderType_UIInputComponent,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n		',(null as any));
    this._el_1 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this.renderer.setElementAttribute(this._el_1,'class','form-group');
    this._text_2 = this.renderer.createText(this._el_1,'\n			',(null as any));
    this._anchor_3 = this.renderer.createTemplateAnchor(this._el_1,(null as any));
    this._appEl_3 = new import2.AppElement(3,1,this,this._anchor_3);
    this._TemplateRef_3_5 = new import16.TemplateRef_(this._appEl_3,viewFactory_UIInputComponent1);
    this._NgIf_3_6 = new import12.NgIf(this._appEl_3.vcRef,this._TemplateRef_3_5);
    this._text_4 = this.renderer.createText(this._el_1,'\n			',(null as any));
    this._el_5 = this.renderer.createElement(this._el_1,'input',(null as any));
    this.renderer.setElementAttribute(this._el_5,'class','form-control');
    this.renderer.setElementAttribute(this._el_5,'type','text');
    this._DefaultValueAccessor_5_3 = new import13.DefaultValueAccessor(this.renderer,new import8.ElementRef(this._el_5));
    this._NG_VALUE_ACCESSOR_5_4 = [this._DefaultValueAccessor_5_3];
    this._NgModel_5_5 = new import14.NgModel((null as any),(null as any),(null as any),this._NG_VALUE_ACCESSOR_5_4);
    this._NgControl_5_6 = this._NgModel_5_5;
    this._NgControlStatus_5_7 = new import15.NgControlStatus(this._NgControl_5_6);
    this._text_6 = this.renderer.createText(this._el_1,'\n		',(null as any));
    this._text_7 = this.renderer.createText(parentRenderNode,'\n	',(null as any));
    this._expr_0 = import7.UNINITIALIZED;
    this._expr_4 = import7.UNINITIALIZED;
    var disposable_0:Function = this.renderer.listen(this._el_5,'ngModelChange',this.eventHandler(this._handle_ngModelChange_5_0.bind(this)));
    var disposable_1:Function = this.renderer.listen(this._el_5,'input',this.eventHandler(this._handle_input_5_1.bind(this)));
    var disposable_2:Function = this.renderer.listen(this._el_5,'blur',this.eventHandler(this._handle_blur_5_2.bind(this)));
    this._expr_5 = import7.UNINITIALIZED;
    this._expr_6 = import7.UNINITIALIZED;
    const subscription_0:any = this._NgModel_5_5.update.subscribe(this.eventHandler(this._handle_ngModelChange_5_0.bind(this)));
    this._expr_7 = import7.UNINITIALIZED;
    this._expr_8 = import7.UNINITIALIZED;
    this._expr_9 = import7.UNINITIALIZED;
    this._expr_10 = import7.UNINITIALIZED;
    this._expr_11 = import7.UNINITIALIZED;
    this._expr_12 = import7.UNINITIALIZED;
    this.init([],[
      this._text_0,
      this._el_1,
      this._text_2,
      this._anchor_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._text_7
    ]
    ,[
      disposable_0,
      disposable_1,
      disposable_2
    ]
    ,[subscription_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import16.TemplateRef) && (3 === requestNodeIndex))) { return this._TemplateRef_3_5; }
    if (((token === import12.NgIf) && (3 === requestNodeIndex))) { return this._NgIf_3_6; }
    if (((token === import13.DefaultValueAccessor) && (5 === requestNodeIndex))) { return this._DefaultValueAccessor_5_3; }
    if (((token === import9.NG_VALUE_ACCESSOR) && (5 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_5_4; }
    if (((token === import14.NgModel) && (5 === requestNodeIndex))) { return this._NgModel_5_5; }
    if (((token === import17.NgControl) && (5 === requestNodeIndex))) { return this._NgControl_5_6; }
    if (((token === import15.NgControlStatus) && (5 === requestNodeIndex))) { return this._NgControlStatus_5_7; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    var changes:{[key: string]:import7.SimpleChange} = (null as any);
    const currVal_0:any = (this.context.label != (null as any));
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this._NgIf_3_6.ngIf = currVal_0;
      this._expr_0 = currVal_0;
    }
    changes = (null as any);
    const currVal_5:any = import4.interpolate(1,'',this.context.label,'');
    if (import4.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      this._NgModel_5_5.name = currVal_5;
      if ((changes === (null as any))) { (changes = {}); }
      changes['name'] = new import7.SimpleChange(this._expr_5,currVal_5);
      this._expr_5 = currVal_5;
    }
    const currVal_6:any = this.context.model;
    if (import4.checkBinding(throwOnChange,this._expr_6,currVal_6)) {
      this._NgModel_5_5.model = currVal_6;
      if ((changes === (null as any))) { (changes = {}); }
      changes['model'] = new import7.SimpleChange(this._expr_6,currVal_6);
      this._expr_6 = currVal_6;
    }
    if ((changes !== (null as any))) { this._NgModel_5_5.ngOnChanges(changes); }
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_4:any = import4.interpolate(1,'',this.context.placeholder,'');
    if (import4.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setElementProperty(this._el_5,'placeholder',currVal_4);
      this._expr_4 = currVal_4;
    }
    const currVal_7:any = this._NgControlStatus_5_7.ngClassUntouched;
    if (import4.checkBinding(throwOnChange,this._expr_7,currVal_7)) {
      this.renderer.setElementClass(this._el_5,'ng-untouched',currVal_7);
      this._expr_7 = currVal_7;
    }
    const currVal_8:any = this._NgControlStatus_5_7.ngClassTouched;
    if (import4.checkBinding(throwOnChange,this._expr_8,currVal_8)) {
      this.renderer.setElementClass(this._el_5,'ng-touched',currVal_8);
      this._expr_8 = currVal_8;
    }
    const currVal_9:any = this._NgControlStatus_5_7.ngClassPristine;
    if (import4.checkBinding(throwOnChange,this._expr_9,currVal_9)) {
      this.renderer.setElementClass(this._el_5,'ng-pristine',currVal_9);
      this._expr_9 = currVal_9;
    }
    const currVal_10:any = this._NgControlStatus_5_7.ngClassDirty;
    if (import4.checkBinding(throwOnChange,this._expr_10,currVal_10)) {
      this.renderer.setElementClass(this._el_5,'ng-dirty',currVal_10);
      this._expr_10 = currVal_10;
    }
    const currVal_11:any = this._NgControlStatus_5_7.ngClassValid;
    if (import4.checkBinding(throwOnChange,this._expr_11,currVal_11)) {
      this.renderer.setElementClass(this._el_5,'ng-valid',currVal_11);
      this._expr_11 = currVal_11;
    }
    const currVal_12:any = this._NgControlStatus_5_7.ngClassInvalid;
    if (import4.checkBinding(throwOnChange,this._expr_12,currVal_12)) {
      this.renderer.setElementClass(this._el_5,'ng-invalid',currVal_12);
      this._expr_12 = currVal_12;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  destroyInternal():void {
    this._NgModel_5_5.ngOnDestroy();
  }
  private _handle_ngModelChange_5_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>(this.context.model = $event)) !== false);
    return (true && pd_0);
  }
  private _handle_input_5_1($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._DefaultValueAccessor_5_3.onChange($event.target.value)) !== false);
    return (true && pd_0);
  }
  private _handle_blur_5_2($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._DefaultValueAccessor_5_3.onTouched()) !== false);
    return (true && pd_0);
  }
}
export function viewFactory_UIInputComponent0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<import3.UIInputComponent> {
  if ((renderType_UIInputComponent === (null as any))) { (renderType_UIInputComponent = viewUtils.createRenderComponentType('D:/Code/angular2-ui/src/components/ui-input/ui-input.component.ts class UIInputComponent - inline template',0,import10.ViewEncapsulation.None,styles_UIInputComponent,{})); }
  return new _View_UIInputComponent0(viewUtils,parentInjector,declarationEl);
}
class _View_UIInputComponent1 extends import1.AppView<any> {
  _el_0:any;
  _text_1:any;
  /*private*/ _expr_0:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_UIInputComponent1,renderType_UIInputComponent,import6.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.renderer.createElement((null as any),'label',(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this._expr_0 = import7.UNINITIALIZED;
    this.init([].concat([this._el_0]),[
      this._el_0,
      this._text_1
    ]
    ,[],[]);
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_0:any = import4.interpolate(1,'',this.parent.context.label,'');
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this.renderer.setText(this._text_1,currVal_0);
      this._expr_0 = currVal_0;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_UIInputComponent1(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  return new _View_UIInputComponent1(viewUtils,parentInjector,declarationEl);
}