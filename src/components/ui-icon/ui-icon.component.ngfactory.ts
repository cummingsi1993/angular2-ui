/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/render/api';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from './ui-icon.component';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/http/src/http';
import * as import9 from '@angular/core/src/linker/element_ref';
import * as import10 from '../../services/ui-resource-cache.service';
import * as import11 from '@angular/core/src/metadata/view';
import * as import12 from '@angular/core/src/linker/component_factory';
import * as import13 from '@angular/common/src/directives/ng_if';
import * as import14 from '@angular/core/src/linker/template_ref';
import * as import15 from '@angular/core/src/security';
var renderType_UIIconComponent_Host:import0.RenderComponentType = (null as any);
class _View_UIIconComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _UIIconComponent_0_4:import3.UIIconComponent;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_UIIconComponent_Host0,renderType_UIIconComponent_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.selectOrCreateHostElement('ui-icon',rootSelector,(null as any));
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_UIIconComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._UIIconComponent_0_4 = new import3.UIIconComponent(this.parentInjector.get(import8.Http),new import9.ElementRef(this._el_0),this.parentInjector.get(import10.UIResourceCacheService));
    this._appEl_0.initComponent(this._UIIconComponent_0_4,[],compView_0);
    compView_0.create(this._UIIconComponent_0_4,this.projectableNodes,(null as any));
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.UIIconComponent) && (0 === requestNodeIndex))) { return this._UIIconComponent_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (((this.numberOfChecks === 0) && !throwOnChange)) { this._UIIconComponent_0_4.ngOnInit(); }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_UIIconComponent_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  if ((renderType_UIIconComponent_Host === (null as any))) { (renderType_UIIconComponent_Host = viewUtils.createRenderComponentType('',0,import11.ViewEncapsulation.None,[],{})); }
  return new _View_UIIconComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const UIIconComponentNgFactory:import12.ComponentFactory<import3.UIIconComponent> = new import12.ComponentFactory<import3.UIIconComponent>('ui-icon',viewFactory_UIIconComponent_Host0,import3.UIIconComponent);
const styles_UIIconComponent:any[] = [];
var renderType_UIIconComponent:import0.RenderComponentType = (null as any);
class _View_UIIconComponent0 extends import1.AppView<import3.UIIconComponent> {
  _text_0:any;
  _anchor_1:any;
  /*private*/ _appEl_1:import2.AppElement;
  _TemplateRef_1_5:any;
  _NgIf_1_6:import13.NgIf;
  _text_2:any;
  /*private*/ _expr_0:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_UIIconComponent0,renderType_UIIconComponent,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n		',(null as any));
    this._anchor_1 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._appEl_1 = new import2.AppElement(1,(null as any),this,this._anchor_1);
    this._TemplateRef_1_5 = new import14.TemplateRef_(this._appEl_1,viewFactory_UIIconComponent1);
    this._NgIf_1_6 = new import13.NgIf(this._appEl_1.vcRef,this._TemplateRef_1_5);
    this._text_2 = this.renderer.createText(parentRenderNode,'\n	',(null as any));
    this._expr_0 = import7.UNINITIALIZED;
    this.init([],[
      this._text_0,
      this._anchor_1,
      this._text_2
    ]
    ,[],[]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import14.TemplateRef) && (1 === requestNodeIndex))) { return this._TemplateRef_1_5; }
    if (((token === import13.NgIf) && (1 === requestNodeIndex))) { return this._NgIf_1_6; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0:any = (this.context.imageSource != (null as any));
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this._NgIf_1_6.ngIf = currVal_0;
      this._expr_0 = currVal_0;
    }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
export function viewFactory_UIIconComponent0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<import3.UIIconComponent> {
  if ((renderType_UIIconComponent === (null as any))) { (renderType_UIIconComponent = viewUtils.createRenderComponentType('D:/Code/angular2-ui/src/components/ui-icon/ui-icon.component.ts class UIIconComponent - inline template',0,import11.ViewEncapsulation.None,styles_UIIconComponent,{})); }
  return new _View_UIIconComponent0(viewUtils,parentInjector,declarationEl);
}
class _View_UIIconComponent1 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_UIIconComponent1,renderType_UIIconComponent,import6.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.renderer.createElement((null as any),'img',(null as any));
    this._expr_0 = import7.UNINITIALIZED;
    this._expr_1 = import7.UNINITIALIZED;
    this._expr_2 = import7.UNINITIALIZED;
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_0:any = this.parent.context.imageSource;
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this.renderer.setElementProperty(this._el_0,'src',this.viewUtils.sanitizer.sanitize(import15.SecurityContext.URL,currVal_0));
      this._expr_0 = currVal_0;
    }
    const currVal_1:any = this.parent.context.widthText;
    if (import4.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setElementProperty(this._el_0,'width',currVal_1);
      this._expr_1 = currVal_1;
    }
    const currVal_2:any = this.parent.context.heightText;
    if (import4.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setElementProperty(this._el_0,'height',currVal_2);
      this._expr_2 = currVal_2;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_UIIconComponent1(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  return new _View_UIIconComponent1(viewUtils,parentInjector,declarationEl);
}