/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/render/api';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from './ui-form.component';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/metadata/view';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '@angular/forms/src/directives/ng_form';
import * as import11 from '@angular/forms/src/directives/ng_control_status';
import * as import12 from '@angular/forms/src/directives/control_container';
var renderType_UIFormComponent_Host:import0.RenderComponentType = (null as any);
class _View_UIFormComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _UIFormComponent_0_4:import3.UIFormComponent;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_UIFormComponent_Host0,renderType_UIFormComponent_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.selectOrCreateHostElement('ui-form',rootSelector,(null as any));
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_UIFormComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._UIFormComponent_0_4 = new import3.UIFormComponent();
    this._appEl_0.initComponent(this._UIFormComponent_0_4,[],compView_0);
    compView_0.create(this._UIFormComponent_0_4,this.projectableNodes,(null as any));
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.UIFormComponent) && (0 === requestNodeIndex))) { return this._UIFormComponent_0_4; }
    return notFoundResult;
  }
}
function viewFactory_UIFormComponent_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  if ((renderType_UIFormComponent_Host === (null as any))) { (renderType_UIFormComponent_Host = viewUtils.createRenderComponentType('',0,import8.ViewEncapsulation.None,[],{})); }
  return new _View_UIFormComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const UIFormComponentNgFactory:import9.ComponentFactory<import3.UIFormComponent> = new import9.ComponentFactory<import3.UIFormComponent>('ui-form',viewFactory_UIFormComponent_Host0,import3.UIFormComponent);
const styles_UIFormComponent:any[] = [];
var renderType_UIFormComponent:import0.RenderComponentType = (null as any);
class _View_UIFormComponent0 extends import1.AppView<import3.UIFormComponent> {
  _text_0:any;
  _el_1:any;
  _NgForm_1_3:import10.NgForm;
  _ControlContainer_1_4:any;
  _NgControlStatusGroup_1_5:import11.NgControlStatusGroup;
  _text_2:any;
  _text_3:any;
  _text_4:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_UIFormComponent0,renderType_UIFormComponent,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n		',(null as any));
    this._el_1 = this.renderer.createElement(parentRenderNode,'form',(null as any));
    this._NgForm_1_3 = new import10.NgForm((null as any),(null as any));
    this._ControlContainer_1_4 = this._NgForm_1_3;
    this._NgControlStatusGroup_1_5 = new import11.NgControlStatusGroup(this._ControlContainer_1_4);
    this._text_2 = this.renderer.createText(this._el_1,'\n			',(null as any));
    this.renderer.projectNodes(this._el_1,import4.flattenNestedViewRenderNodes(this.projectableNodes[0]));
    this._text_3 = this.renderer.createText(this._el_1,'\n		',(null as any));
    this._text_4 = this.renderer.createText(parentRenderNode,'\n	',(null as any));
    this._expr_2 = import7.UNINITIALIZED;
    var disposable_0:Function = this.renderer.listen(this._el_1,'submit',this.eventHandler(this._handle_submit_1_0.bind(this)));
    var disposable_1:Function = this.renderer.listen(this._el_1,'reset',this.eventHandler(this._handle_reset_1_1.bind(this)));
    this._expr_3 = import7.UNINITIALIZED;
    this._expr_4 = import7.UNINITIALIZED;
    this._expr_5 = import7.UNINITIALIZED;
    this._expr_6 = import7.UNINITIALIZED;
    this._expr_7 = import7.UNINITIALIZED;
    this._expr_8 = import7.UNINITIALIZED;
    this.init([],[
      this._text_0,
      this._el_1,
      this._text_2,
      this._text_3,
      this._text_4
    ]
    ,[
      disposable_0,
      disposable_1
    ]
    ,[]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import10.NgForm) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 3)))) { return this._NgForm_1_3; }
    if (((token === import12.ControlContainer) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 3)))) { return this._ControlContainer_1_4; }
    if (((token === import11.NgControlStatusGroup) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 3)))) { return this._NgControlStatusGroup_1_5; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_2:any = this.context.inline;
    if (import4.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setElementClass(this._el_1,'form-inline',currVal_2);
      this._expr_2 = currVal_2;
    }
    const currVal_3:any = this._NgControlStatusGroup_1_5.ngClassUntouched;
    if (import4.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this.renderer.setElementClass(this._el_1,'ng-untouched',currVal_3);
      this._expr_3 = currVal_3;
    }
    const currVal_4:any = this._NgControlStatusGroup_1_5.ngClassTouched;
    if (import4.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setElementClass(this._el_1,'ng-touched',currVal_4);
      this._expr_4 = currVal_4;
    }
    const currVal_5:any = this._NgControlStatusGroup_1_5.ngClassPristine;
    if (import4.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      this.renderer.setElementClass(this._el_1,'ng-pristine',currVal_5);
      this._expr_5 = currVal_5;
    }
    const currVal_6:any = this._NgControlStatusGroup_1_5.ngClassDirty;
    if (import4.checkBinding(throwOnChange,this._expr_6,currVal_6)) {
      this.renderer.setElementClass(this._el_1,'ng-dirty',currVal_6);
      this._expr_6 = currVal_6;
    }
    const currVal_7:any = this._NgControlStatusGroup_1_5.ngClassValid;
    if (import4.checkBinding(throwOnChange,this._expr_7,currVal_7)) {
      this.renderer.setElementClass(this._el_1,'ng-valid',currVal_7);
      this._expr_7 = currVal_7;
    }
    const currVal_8:any = this._NgControlStatusGroup_1_5.ngClassInvalid;
    if (import4.checkBinding(throwOnChange,this._expr_8,currVal_8)) {
      this.renderer.setElementClass(this._el_1,'ng-invalid',currVal_8);
      this._expr_8 = currVal_8;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  private _handle_submit_1_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._NgForm_1_3.onSubmit()) !== false);
    return (true && pd_0);
  }
  private _handle_reset_1_1($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._NgForm_1_3.onReset()) !== false);
    return (true && pd_0);
  }
}
export function viewFactory_UIFormComponent0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<import3.UIFormComponent> {
  if ((renderType_UIFormComponent === (null as any))) { (renderType_UIFormComponent = viewUtils.createRenderComponentType('D:/Code/angular2-ui/src/components/ui-form/ui-form.component.ts class UIFormComponent - inline template',1,import8.ViewEncapsulation.None,styles_UIFormComponent,{})); }
  return new _View_UIFormComponent0(viewUtils,parentInjector,declarationEl);
}