/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/render/api';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from './ui-container.component';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/metadata/view';
import * as import9 from '@angular/core/src/linker/component_factory';
var renderType_UIContainerComponent_Host:import0.RenderComponentType = (null as any);
class _View_UIContainerComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _UIContainerComponent_0_4:import3.UIContainerComponent;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_UIContainerComponent_Host0,renderType_UIContainerComponent_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.selectOrCreateHostElement('ui-container',rootSelector,(null as any));
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_UIContainerComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._UIContainerComponent_0_4 = new import3.UIContainerComponent();
    this._appEl_0.initComponent(this._UIContainerComponent_0_4,[],compView_0);
    compView_0.create(this._UIContainerComponent_0_4,this.projectableNodes,(null as any));
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.UIContainerComponent) && (0 === requestNodeIndex))) { return this._UIContainerComponent_0_4; }
    return notFoundResult;
  }
}
function viewFactory_UIContainerComponent_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  if ((renderType_UIContainerComponent_Host === (null as any))) { (renderType_UIContainerComponent_Host = viewUtils.createRenderComponentType('',0,import8.ViewEncapsulation.None,[],{})); }
  return new _View_UIContainerComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const UIContainerComponentNgFactory:import9.ComponentFactory<import3.UIContainerComponent> = new import9.ComponentFactory<import3.UIContainerComponent>('ui-container',viewFactory_UIContainerComponent_Host0,import3.UIContainerComponent);
const styles_UIContainerComponent:any[] = [];
var renderType_UIContainerComponent:import0.RenderComponentType = (null as any);
class _View_UIContainerComponent0 extends import1.AppView<import3.UIContainerComponent> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _text_3:any;
  _text_4:any;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_UIContainerComponent0,renderType_UIContainerComponent,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n		',(null as any));
    this._el_1 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this._text_2 = this.renderer.createText(this._el_1,'\n			',(null as any));
    this.renderer.projectNodes(this._el_1,import4.flattenNestedViewRenderNodes(this.projectableNodes[0]));
    this._text_3 = this.renderer.createText(this._el_1,'\n		',(null as any));
    this._text_4 = this.renderer.createText(parentRenderNode,'\n	',(null as any));
    this._expr_0 = import7.UNINITIALIZED;
    this._expr_1 = import7.UNINITIALIZED;
    this.init([],[
      this._text_0,
      this._el_1,
      this._text_2,
      this._text_3,
      this._text_4
    ]
    ,[],[]);
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_0:boolean = !this.context.fluid;
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this.renderer.setElementClass(this._el_1,'container',currVal_0);
      this._expr_0 = currVal_0;
    }
    const currVal_1:any = this.context.fluid;
    if (import4.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setElementClass(this._el_1,'container-fluid',currVal_1);
      this._expr_1 = currVal_1;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
}
export function viewFactory_UIContainerComponent0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<import3.UIContainerComponent> {
  if ((renderType_UIContainerComponent === (null as any))) { (renderType_UIContainerComponent = viewUtils.createRenderComponentType('D:/Code/angular2-ui/src/components/ui-container/ui-container.component.ts class UIContainerComponent - inline template',1,import8.ViewEncapsulation.None,styles_UIContainerComponent,{})); }
  return new _View_UIContainerComponent0(viewUtils,parentInjector,declarationEl);
}